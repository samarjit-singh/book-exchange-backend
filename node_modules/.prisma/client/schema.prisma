generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String        @id @default(uuid())
  name             String
  email            String        @unique
  mobile           String
  password         String
  role             Role
  books            Book[]        @relation("OwnerBooks")
  incomingRequests BookRequest[] @relation("ReceiverRequests")
  outgoingRequests BookRequest[] @relation("SenderRequests")
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
}

model Book {
  id        String        @id @default(uuid())
  title     String
  author    String
  genre     String?
  location  String
  contact   String
  status    BookStatus    @default(AVAILABLE)
  ownerId   String
  owner     User          @relation("OwnerBooks", fields: [ownerId], references: [id])
  imageUrl  String?
  requests  BookRequest[]
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

model BookRequest {
  id           String        @id @default(uuid())
  bookId       String
  book         Book          @relation(fields: [bookId], references: [id])
  senderId     String
  sender       User          @relation("SenderRequests", fields: [senderId], references: [id])
  receiverId   String
  receiver     User          @relation("ReceiverRequests", fields: [receiverId], references: [id])
  exchangeType ExchangeType
  message      String?
  status       RequestStatus @default(PENDING)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

enum Role {
  OWNER
  SEEKER
}

enum BookStatus {
  AVAILABLE
  RENTED
  EXCHANGED
}

enum ExchangeType {
  BORROW
  EXCHANGE_WITH_MY_BOOK
  PURCHASE
}

enum RequestStatus {
  PENDING
  ACCEPTED
  DECLINED
}
